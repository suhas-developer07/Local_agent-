/// <reference types="node" />
export declare type JobQueue = Array<{
    id: string;
    printerName: string;
    user: string;
    size: string;
    date: string;
}>;
export declare type QueueOptions = {
    printers: string[];
};
export declare const getCompletedQueue: (options?: QueueOptions | undefined) => Promise<JobQueue>;
export declare const getNotCompletedQueue: (options?: QueueOptions | undefined) => Promise<JobQueue>;
export declare const getPrinterNames: () => Promise<string[]>;
export declare type PrinterOptions = {
    name: string;
    values: string[];
    defaultValue?: string;
};
export declare const getPrinterOptions: (printerName: string) => Promise<Array<PrinterOptions>>;
export declare const getAllPrinterOptions: () => Promise<{
    printerName: string;
    options: PrinterOptions[];
}[]>;
export declare type PrintParams = {
    printer?: string;
    copies?: number;
    priority?: number;
    pages?: string;
    fitToPage?: boolean;
    printerOptions: Record<string, string>;
};
export declare type PrintResult = {
    stdout: string;
    requestId?: string;
};
export declare const printBuffer: (data: Buffer, params: PrintParams) => Promise<PrintResult>;
export declare const printFile: (file: string, params: PrintParams) => Promise<PrintResult>;
export declare const cancelAllJobs: (printer?: string | undefined) => Promise<void>;
export declare const cancelJob: (requestId: string) => Promise<void>;
